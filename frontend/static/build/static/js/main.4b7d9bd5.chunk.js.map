{"version":3,"sources":["Components/TextWindow.js","Components/CharWindow.js","images/dungeonWalk1.jpg","images/gate.jpg","images/castle.jpg","images/street.jpg","images/dungeonWalk.gif","Components/GraphicsWindow.js","roomlist.js","images/dungeonWalk2.gif","Components/Rooms.js","Components/CombatWindow.js","Components/Login.js","Components/Character.js","Components/Inventory.js","Components/Nav.js","Components/Magic.js","moblist.js","App.js","reportWebVitals.js","index.js"],"names":["Component","name","location","this","level","ac","maxhp","currenthp","maxsp","currentsp","job","items","weapons","armor","north","south","east","west","roomid","CharWindow","props","state","charId","lvl","hpmax","hp","spmax","sp","class","weapon","saveChar","bind","char","fetch","id","method","headers","Cookies","get","body","JSON","stringify","all","charWeapon","onClick","healChar","className","xp","GraphicsWindow","src","image","alt","rooms","desc","Rooms","moveMsg","currentroom","dir","move","e","dest","target","title","filter","room","changeRoomImage","dungeonWalk2","dungeonWalk1","setState","setTimeout","roomname","nsew","Login","isLoggedIn","username","email","password","password1","password2","data","handleInput","handleLogin","reset","window","reload","obj","a","preventDefault","options","handleError","err","console","warn","response","json","catch","key","set","event","value","formData","FormData","append","registerForm","onSubmit","handleRegistration","type","placeholder","onChange","profileCreate","createProfile","loginForm","Character","charSheet","Inventory","Nav","to","Magic","moblist","mobId","damage","damMessage","App","combatwindow","combat","mob","charSpell","charAttackMessage","mobAttackMessage","charDeath","changeToCombatWindow","meleeAttack","magicAttack","runAway","rando","resetWindow","randomMob","charWins","weaponId","damageLow","damageHigh","spellId","spCost","then","img","img2","min","max","Math","floor","random","rand","length","playerMessage","charDamage","switchViewsButton","getRandomMob","meleeAttackButton","magicAttackButton","runAwayButton","style","padding","Fragment","path","component","children","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4b7d9bd5.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport '../App.css';\n\n\nclass TextWindow extends Component{\n\n\n\n    render(){\n\n  return (\n    <div className=\"App\">\n    <h2 className=\"roomHead\">Room Name</h2>\n    <p>You are facing north.</p>\n    <p>The imposing stone towers of The Keep stand in the distance. A\n    wide flagstone road leads north, toward the Keep.</p>\n    <br/>\n    <br/>\n    <br/>\n    <div>\n    [N]north\n    [S]outh\n    [E]ast\n    [W]est\n    <input className=\"direction\"></input></div>\n\n    </div>\n  );\n}\n}\n\n\n\nfunction Room(north, south, east, west){\n  this.name = \"\";\n  this.north = north;\n  this.south = south;\n  this.east = east;\n  this.west = west;\n  this.roomid = \"\";\n\n}\n\nfunction Player(name, location){\n  this.name = name;\n  this.location = \"\";\n  this.level = \"\";\n  this.ac = \"\";\n  this.maxhp = \"\";\n  this.currenthp = \"\";\n  this.maxsp = \"\";\n  this.currentsp = \"\";\n  this.job = \"\";\n  this.items = [];\n  this.weapons = [];\n  this.armor = [];\n}\n\n\nfunction map(){\n  console.log(\"Future map function\");\n}\n\nfunction n(player, room){\n  const msg = \"You walk to the north\";\n  const loc = player.location;\n  goto(player, room);\n\n}\n\nfunction goto(player, room){\n  console.log(player, room);\n\n}\n\nconst player1 = new Player(\"player1\", 1);\nconst room1 = new Room(2);\n\n// n(player1, room1);\n\n\nexport default TextWindow;\n","import React, {Component} from 'react';\nimport Cookies from 'js-cookie';\nimport '../App.css';\n\n\nclass CharWindow extends Component{\n  constructor (props){\n    super(props);\n    this.state =  {\n      charId: \"\",\n      name: \"\",\n      lvl: \"\",\n      ac: \"\",\n      hpmax: \"\",\n      hp: \"\",\n      spmax: \"\",\n      sp: \"\",\n      class: \"\",\n      weapon: \"\",\n    }\nthis.saveChar = this.saveChar.bind(this);\n  }\n\n// saveChar(char){\n//   localStorage.setItem('char', JSON.stringify(char))\n// }\n\nsaveChar(char){\n  fetch(`/characters/save/${char.id}/`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n        'X-CSRFToken': Cookies.get('csrftoken'),\n      },\n      body: JSON.stringify({...char}),\n    })\n}\n\n\n\n  componentDidMount(){\n          // this.setState(this.props.char)\n}\n\n  render(){\n    const char = this.props.all.char\n    const charWeapon = this.props.all.charWeapon\n    const saveChar = <button onClick={()=>this.saveChar(char)}>Save Character</button>\n    const healChar = <button onClick={this.props.healChar}>Heal Character</button>\n\n  return (\n    <div className=\"App\">\n    <div className=\"row charbanner\">\n    <div className=\"col-3 char\">Name</div>\n    <div className=\"col-2 class\">Class</div>\n    <div className=\"col-1 lvl\">Lvl</div>\n    <div className=\"col-1 ac\">AC</div>\n    <div className=\"col-1 hp\">HP</div>\n    <div className=\"col-1 sp\">SP</div>\n    <div className=\"col-1 xp\">XP</div>\n    <div className=\"col-1 weapon\">Weapon</div>\n    </div>\n    <div className=\"row charSpace\"></div>\n    <div className=\"row char1row\">\n    <p className=\"col-3 char1\">{char.name}</p>\n    <p className=\"col-2 cl1\">{char.job}</p>\n    <p className=\"col-1 lvl1\">{char.level}</p>\n    <p className=\"col-1 ac1\">{char.ac}</p>\n    <p className=\"col-1 hp1\">{char.hp}/{char.hpmax}</p>\n    <p className=\"col-1 sp1\">{char.sp != null ? `${char.sp}/${char.spmax}` : 'N/A'}</p>\n    <p className=\"col-1 xp1\">{char.xp}</p>\n    <p className=\"col-1 weapon\">{charWeapon.name}</p>\n    </div>\n    <div className=\"row char2row\">\n    <p className=\"col-3 char2\"></p>\n    <p className=\"col-2 lvl2\"></p>\n    <p className=\"col-2 ac2\"></p>\n    <p className=\"col-2 hp2\"></p>\n    <p className=\"col-2 sp2\"></p>\n    <p className=\"col-1 cl2\"></p>\n    </div>\n    <div className=\"row char3row\">\n    <p className=\"col-3 char3\"></p>\n    <p className=\"col-2 lvl3\"></p>\n    <p className=\"col-2 ac3\"></p>\n    <p className=\"col-2 hp3\"></p>\n    <p className=\"col-2 sp3\"></p>\n    <p className=\"col-1 cl3\"></p>\n    </div>\n    {saveChar}\n    {healChar}\n    </div>\n  );\n}\n}\nexport default CharWindow;\n","export default __webpack_public_path__ + \"static/media/dungeonWalk1.3c3053f6.jpg\";","export default __webpack_public_path__ + \"static/media/gate.4fc8e47b.jpg\";","export default __webpack_public_path__ + \"static/media/castle.df9d2fb9.jpg\";","export default __webpack_public_path__ + \"static/media/street.f9fdf14e.jpg\";","export default __webpack_public_path__ + \"static/media/dungeonWalk.a8594a95.gif\";","import React, {Component} from 'react';\nimport '../App.css';\nimport gate from '../images/gate.jpg'\nimport castle from '../images/castle.jpg'\nimport street from '../images/street.jpg'\nimport dungeonWalk from '../images/dungeonWalk.gif'\nimport dungeonWalk1 from '../images/dungeonWalk1.jpg'\n\nclass GraphicsWindow extends Component{\n  constructor (props){\n        super(props);\n        this.state = {\n\n        }\n      }\n\n  render(){\n\n\n  return (\n    <div>\n    <img className=\"img img-fluid\" src={this.props.all.image} alt=\"gate\" />\n    </div>\n  );\n}\n}\nexport default GraphicsWindow;\n","const rooms = [{\n        id: 1,\n        name: \"Home Base\",\n        desc: \"Empty room filled with nothing but hope\",\n        north: 2,\n        south: null,\n        east: 8,\n        west: null,\n      },\n      {\n        id: 2,\n        name: 'Room to the North',\n        desc: `A surprisingly difficult to reach destination. There are exits\n        to the north and south.`,\n        north: 3,\n        south: 1,\n        east: null,\n        west: null,\n      },\n      {\n        id: 3,\n        name: 'Center of the Build',\n        desc: 'A soaring cavern with exits in all directions',\n        north: 5,\n        south: 2,\n        east: 6,\n        west: 4,\n      },\n      {\n        id: 4,\n        name: 'The Western Chamber',\n        desc: `A quiet space for working and testing. There's an exit to the east`,\n        north: null,\n        south: null,\n        east: 3,\n        west: null,\n      },\n      {\n        id: 5,\n        name: 'The Pillar of Ice',\n        desc: `A cold, soaring chamber dominated by a gleaming pillar of ice`,\n        north: null,\n        south: 3,\n        east: null,\n        west: null,\n      },\n      {\n        id: 6,\n        name: 'The Eastern Chamber',\n        desc: `A large cavern strewn with building materials and monster parts`,\n        north: null,\n        south: 7,\n        east: null,\n        west: 3,\n      },\n      {\n        id: 7,\n        name: 'The Eastern Corridor',\n        desc: `A long stone cavern filled with the glowing golden light of hundreds\n        of torches. Just like that Police video.`,\n        north: 6,\n        south: 8,\n        east: null,\n        west: null,\n      },\n      {\n        id: 8,\n        name: `The Study`,\n        desc: `A small, quiet room with floor-to-ceiling bookshelves and many\n        comfortable chairs.`,\n        north: 7,\n        south: null,\n        east: null,\n        west: 1,\n      }\n]\nexport default rooms\n","export default __webpack_public_path__ + \"static/media/dungeonWalk2.de5523d3.gif\";","import React, {Component} from 'react';\nimport '../App.css';\nimport rooms from '../roomlist';\nimport dungeonWalk from '../images/dungeonWalk.gif'\nimport dungeonWalk1 from '../images/dungeonWalk1.jpg'\nimport dungeonWalk2 from '../images/dungeonWalk2.gif'\n\nclass Rooms extends Component{\n  constructor (props){\n    super(props);\n    this.state = {\n      moveMsg: \"\",\n      currentroom: rooms[0],\n      dir: {},\n            }\n\nthis.move = this.move.bind(this);\n  }\n\n\nmove(e){\nlet dir = e.target.title\nlet dest;\nif (dir == \"north\"){\n  dest = rooms.filter(room => room.id == this.state.currentroom.north)}\nif (dir == \"south\"){\n  dest = rooms.filter(room => room.id == this.state.currentroom.south)}\nif (dir == \"east\"){\n  dest = rooms.filter(room => room.id == this.state.currentroom.east)}\nif (dir == \"west\"){\n  dest = rooms.filter(room => room.id == this.state.currentroom.west)}\ndest = dest[0]\nif (dest) {\n  this.props.changeRoomImage(dungeonWalk2, dungeonWalk1)\n  this.setState({moveMsg: `You walk to the ${dir}.`})\n  this.setState({name: \"\", desc: \"\"});\n  setTimeout(() => {this.setState({moveMsg: \"\"})}, 1000);\n  setTimeout(() => {this.setState({currentroom: dest})}, 1000);\n}\nelse {\n  this.setState({moveMsg: \"There's no exit in that direction!\"})\n}\n}\n\n\n  render(){\n    const roomname = this.state.currentroom.name;\n    const desc = this.state.currentroom.desc;\n    const nsew = <>\n    {this.state.currentroom.north ? <span title=\"north\" onClick={this.move}>{`<N>`}</span> : null}\n    {this.state.currentroom.south ? <span title=\"south\" onClick={this.move}>{`<S>`}</span> : null}\n    {this.state.currentroom.east ? <span title=\"east\" onClick={this.move}>{`<E>`}</span> : null}\n    {this.state.currentroom.west ?<span title=\"west\" onClick={this.move}>{`<W>`}</span> : null}\n    </>\n\n    let moveMsg = this.state.moveMsg\n\n\n\n\n  return (\n    <div>\n    <h1>{roomname}</h1>\n    <p id=\"moveMsg\">{moveMsg}</p>\n    <p>{desc}</p>\n    <p id=\"nsew\">{nsew}</p>\n    </div>\n  );\n}\n}\nexport default Rooms;\n","import React, {Component} from 'react';\nimport '../App.css';\n\n\nclass CombatWindow extends Component{\n  constructor (props){\n    super(props);\n    this.state =  {\n}\nthis.childDamage = this.childDamage.bind(this);\n  }\n\n\n\n  componentDidMount(){\n    // this.setState(this.props.all)\n}\n\nchildDamage(){\n  let char = this.props.all.char\n  char.hp = char.hp - 1;\n  this.setState({char});\n  console.log(char);\n}\n\n\n\n  render(){\n    const char = this.props.all.char\n    const charWeapon = this.props.all.charWeapon\n    const mob = this.props.all.mob\n\nconst combatMessages = <section>These messages will be generated by the combat routine, {char.name}</section>\n\nconst childDamageTest = <section><button onClick={this.childDamage}>Child Damage</button></section>\n  return (\n    <div>\n    {combatMessages}\n    {childDamageTest}\n    </div>\n  );\n}\n}\nexport default CombatWindow;\n","import React, {Component} from 'react'\nimport Cookies from 'js-cookie'\nimport '../App.css';\n\nclass Login extends Component {\n  constructor (props){\n        super(props);\n        this.state = {\n          isLoggedIn: !!Cookies.get('Authorization'),\n          username: \"\",\n          email: \"\",\n          password: \"\",\n          password1: \"\",\n          password2: \"\",\n          data: [],\n        }\n    this.handleInput = this.handleInput.bind(this);\n    this.handleLogin = this.handleLogin.bind(this);\n    this.reset = this.reset.bind(this);\n      }\n\nreset(){\n  this.setState({username: \"\"})\n  this.setState({password: \"\"})\n  window.location.reload();\n}\n\n\n  async handleLogin(e, obj){\n    e.preventDefault();\n    const options = {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'X-CSRFToken': Cookies.get('csrftoken'),\n        },\n        body: JSON.stringify(obj),\n    };\n    const handleError = (err) => console.warn(err);\n    const response = await fetch('/rest-auth/login/', options);\n    const data = await response.json().catch(handleError);\n    if(data.key) {\n    Cookies.set('Authorization', `Token ${data.key}`);\n    }\n    this.reset();\n  }\n\n\n\nhandleInput(event){\n          this.setState({[event.target.name]: event.target.value});\n        }\n\n\n\nasync handleRegistration(e, obj){\n  e.preventDefault();\n\n      const options = {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'X-CSRFToken': Cookies.get('csrftoken'),\n        },\n        body: JSON.stringify(obj),\n      };\n      const handleError = (err) => console.warn(err);\n      const response = await fetch('/rest-auth/registration/', options);\n      const data = await response.json().catch(handleError);\n\n      if(data.key) {\n        Cookies.set('Authorization', `Token ${data.key}`);\n      }\n      this.setState({username: \"\", email: \"\", password1: \"\", password2: \"\"})\n    }\n\n\n\nasync createProfile(){\n\n\n    let formData = new FormData();\n    formData.append('user', 1);\n\n    const options = {\n      method: 'POST',\n      headers: {\n        'X-CSRFToken': Cookies.get('csrftoken'),\n      },\n      body: formData,\n    }\n\n    await fetch('/profiles/', options);\n    }\n\n\n\n\n\n\n\n  render(){\n\n\nconst registerForm = (<form onSubmit={(e) => this.handleRegistration(e, this.state)}>\n      <p>Welcome! Please register to create your own adventurer!</p>\n      <input className=\"input-group form-control\" type=\"text\" placeholder=\"username\" name=\"username\" value={this.state.username} onChange={this.handleInput}/>\n      <input className=\"input-group form-control\" type=\"email\" placeholder=\"email\" name=\"email\" value={this.state.email} onChange={this.handleInput}/>\n      <input className=\"input-group form-control\" type=\"password\" placeholder=\"password\" name=\"password1\" value={this.state.password1} onChange={this.handleInput}/>\n      <input className=\"input-group form-control\" type=\"password\" placeholder=\"confirm pass\" name=\"password2\" value={this.state.password2} onChange={this.handleInput}/>\n      <p><button className=\"btn btn-secondary\" type=\"submit\">Register</button></p>\n      </form>)\n\n\nconst profileCreate = <div className=\"profileCreateForm\"><button className=\"btn btn-secondary\" onClick={this.createProfile}>Create Profile</button></div>\n\n\nconst loginForm = (<form onSubmit={(e) => this.handleLogin(e, this.state)}>\n      <input className=\"input-group\" type=\"text\" placeholder=\"username\" name=\"username\" value={this.state.username} onChange={this.handleInput}/>\n      <input className=\"input-group\" type=\"password\" placeholder=\"password\" name=\"password\" value={this.state.password} onChange={this.handleInput}/>\n      <button className=\"btn\" type=\"submit\">Log In</button>\n      </form>)\n\n      return(\n        <div className=\"loginForm\">\n        {loginForm}\n        {registerForm}\n        {profileCreate}\n        </div>\n      );\n    }\n  }\n  export default Login\n","import React, {Component} from 'react';\nimport {useState} from 'react';\nimport '../App.css';\n\nclass Character extends Component {\n  constructor (props){\n        super(props);\n        this.state = {\n\n        }\n      }\n        render(){\nconst char = this.props.all.char\nconst charSheet = <div className=\"charSheet\">\n<p>Name: {char.name}</p>\n<p>Class: {char.job}</p>\n<p>Level: {char.level}</p>\n<p>Armor: {char.ac}</p>\n<p>Health: {char.hp}</p>\n<p>Max Health: {char.hpmax}</p>\n<p>Magic: {char.sp}</p>\n<p>Max Magic: {char.spmax}</p>\n<p>Experience: {char.xp}</p>\n</div>\n\n\n  return(\n\n    <div >\n    {charSheet}\n    </div>\n\n  );\n}\n}\nexport default Character;\n","\nimport React, {Component} from 'react';\nimport '../App.css';\n\nclass Inventory extends Component {\n  constructor (props){\n        super(props);\n        this.state = {\n\n        }\n      }\n        render(){\n\n  return(\n\n    <div >\n    Inventory!\n    </div>\n\n  );\n}\n}\nexport default Inventory;\n","import {NavLink} from 'react-router-dom';\nimport React, {Component} from 'react';\nimport Login from './Login'\nimport Character from './Character'\nimport Inventory from './Inventory'\nimport '../App.css';\n\nclass Nav extends Component {\n  constructor (props){\n        super(props);\n        this.state = {\n\n        }\n      }\n\n      render(){\n\n\n\n\n  return(\n    <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n    <div className=\"container-fluid\" id=\"navContainer\">\n    <NavLink to=\"/\">Game</NavLink>\n    <NavLink to=\"/login/\">Accounts</NavLink>\n    <NavLink to=\"/character/\">Character</NavLink>\n    <NavLink to=\"/magic/\">Magic</NavLink>\n    <NavLink to=\"/inventory/\">Inventory</NavLink>\n    </div>\n    </nav>\n  );\n}\n}\nexport default Nav;\n","import React, {Component} from 'react';\nimport '../App.css';\n\nclass Magic extends Component {\n  constructor (props){\n        super(props);\n        this.state = {\n\n        }\n      }\n        render(){\n\n  return(\n\n    <div >\n    Magic\n    </div>\n\n  );\n}\n}\nexport default Magic;\n","const moblist = [\n\n      {\n        mobId: 1,\n        name: \"Bob the Dummy\",\n        damage: 1,\n        hp: 10,\n        hpmax: 10,\n        sp: \"null\",\n        spmax: \"null\",\n        ac: 10,\n        weapon: \"wooden sword\",\n        damMessage: \"pokes\",\n        xp: 10,\n      },\n\n      {\n        mobId: 2,\n        name: \"drop bear\",\n        damage: 1,\n        hp: 10,\n        hpmax: 10,\n        sp: \"null\",\n        spmax: \"null\",\n        ac: 10,\n        weapon: \"claws\",\n        damMessage: \"rakes\",\n        xp: 10,\n      },\n\n      {\n        mobId: 3,\n        name: \"giant tarantula\",\n        damage: 1,\n        hp: 12,\n        hpmax: 12,\n        sp: \"null\",\n        spmax: \"null\",\n        ac: 12,\n        weapon: \"fangs\",\n        damMessage: \"pierce\",\n        xp: 10,\n      },\n\n      {\n        mobId: 4,\n        name: \"hobgoblin\",\n        damage: 1,\n        hp: 12,\n        hpmax: 12,\n        sp: \"null\",\n        spmax: \"null\",\n        ac: 9,\n        weapon: \"short sword\",\n        damMessage: \"slashes\",\n        xp: 10,\n      },\n      {\n        mobId: 5,\n        name: \"giant rat\",\n        damage: 1,\n        hp: 7,\n        hpmax: 7,\n        sp: \"null\",\n        spmax: \"null\",\n        ac: 8,\n        weapon: \"teeth\",\n        damMessage: \"gouge\",\n        xp: 10,\n      },\n      {\n        mobId: 6,\n        name: \"black slime\",\n        damage: 1,\n        hp: 6,\n        hpmax: 6,\n        sp: \"null\",\n        spmax: \"null\",\n        ac: 12,\n        weapon: \"acid goo\",\n        damMessage: \"burns\",\n        xp: 10,\n      },\n\n      {\n        mobId: 7,\n        name: \"kobold\",\n        damage: 1,\n        hp: 13,\n        hpmax: 13,\n        sp: \"null\",\n        spmax: \"null\",\n        ac: 10,\n        weapon: \"rusty knife\",\n        damMessage: \"pierces\",\n        xp: 10\n      },\n]\nexport default moblist\n","import React, {Component} from 'react';\nimport {useState} from 'react';\nimport {Route, Switch} from 'react-router-dom';\nimport TextWindow from './Components/TextWindow';\nimport CharWindow from './Components/CharWindow';\nimport GraphicsWindow from './Components/GraphicsWindow';\nimport Rooms from './Components/Rooms';\nimport CombatWindow from './Components/CombatWindow'\nimport Nav from './Components/Nav'\nimport Inventory from './Components/Inventory'\nimport Character from './Components/Character'\nimport Login from './Components/Login'\nimport Cookies from 'js-cookie';\nimport {Modal, Button} from \"react-bootstrap\";\nimport Magic from './Components/Magic'\nimport moblist from './moblist'\nimport rooms from './roomlist'\nimport dungeonWalk from './images/dungeonWalk.gif'\nimport dungeonWalk1 from './images/dungeonWalk1.jpg'\nimport dungeonWalk2 from './images/dungeonWalk2.gif'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\n\n\nclass App extends Component{\n  constructor (props){\n    super(props);\n    this.state = {\n      combatwindow: false,\n      combat: false,\n      char : {},\n      charWeapon: {},\n      mob: {},\n      charSpell: {},\n      charAttackMessage: \"\",\n      mobAttackMessage: \"\",\n      data: [],\n      isLoggedIn: !!Cookies.get('Authorization'),\n      image: dungeonWalk1,\n    }\nthis.charDeath = this.charDeath.bind(this);\nthis.changeToCombatWindow = this.changeToCombatWindow.bind(this);\nthis.meleeAttack = this.meleeAttack.bind(this);\nthis.magicAttack = this.magicAttack.bind(this);\nthis.runAway = this.runAway.bind(this);\nthis.rando = this.rando.bind(this);\nthis.resetWindow = this.resetWindow.bind(this);\nthis.randomMob = this.randomMob.bind(this);\nthis.healChar = this.healChar.bind(this);\nthis.charWins = this.charWins.bind(this);\nthis.changeRoomImage = this.changeRoomImage.bind(this);\n  }\n\n  componentDidMount(){\n    const char = {\n            charId: 1,\n            name: \"Wingrave\",\n            lvl: \"1\",\n            ac: 10,\n            hpmax: 8,\n            hp: 8,\n            spmax: 8,\n            sp: 8,\n            class: 'ranger',\n            weapon: \"\",\n            xp: 0,\n          }\n\n    const charWeapon = {\n            weaponId: 1,\n            name: \"longsword\",\n            damageLow: 2,\n            damageHigh: 5,\n            damMessage: \"slashes\",\n          }\n\n    const mob = {\n            mobId: 1,\n            name: \"Bob the Dummy\",\n            damage: 1,\n            hp: 10,\n            hpmax: 10,\n            sp: \"null\",\n            spmax: \"null\",\n            ac: 10,\n            weapon: \"wooden sword\",\n            damMessage: \"pokes\",\n    }\n    const charSpell = {\n            spellId: 1,\n            name: \"force bolt\",\n            damageLow: 2,\n            damageHigh: 8,\n            spCost: 4,\n            damMessage: \"slams\"\n    }\n          // if (localStorage.getItem('char')){\n          //   let loadChar = JSON.parse(localStorage.getItem('char'));\n          //   this.setState({char: loadChar});\n          // }\n          // else{\n          //   this.setState({char})\n          // }\n\n          this.setState({charWeapon})\n          this.setState({mob})\n          this.setState({charSpell})\n\n\n        fetch(\"/characters/\")\n      .then(response => response.json())\n      .then(response => response[0])\n      .then(response => this.setState({char: response}));\n\n\n      // this.state.data.map((data) => (this.setState({char: data})))\n\n  }\n\nchangeToCombatWindow(){\n  if (this.state.combatwindow == false) {\n  this.setState({combatwindow: true})\n}\nelse {\n  this.setState({combatwindow: false})\n}\n}\n\nchangeRoomImage(img, img2){\n  this.setState({image: img})\n  setTimeout(() => {this.setState({image: img2})}, 2000);\n}\n\nrando(min, max) {\n  return Math.floor(Math.random() * (max - min) ) + min;\n}\n\nrandomMob(){\n  const rand = Math.floor(Math.random() * (moblist.length - 1) ) + 1;\n  const mob = moblist[rand]\n  this.setState({mob})\n  this.setState({playerMessage: `A ${this.state.mob.name} has entered the fight!`})\n  setTimeout(() => {this.setState({playerMessage: \"\"})}, 2000);\n}\n\n\nresetWindow(){\n  setTimeout(() => {this.setState({combat: false})}, 4000);\n  setTimeout(() => {this.setState({combatwindow: false})}, 4000);\n  setTimeout(() => {this.setState({charAttackMessage: \"\"})}, 4000);\n  setTimeout(() => {this.setState({mobAttackMessage: \"\"})}, 4000);\n  setTimeout(() => {this.setState({playerMessage: \"\"})}, 4000);\n}\n\n\n\nmeleeAttack(char, mob, charWeapon) {\n  if (this.state.combat == false){\n    this.setState({combat:  true});\n    mob.hp = mob.hpmax\n    char.hp = char.hpmax\n  }\n  const damage = this.rando(charWeapon.damageLow, charWeapon.damageHigh)\n  mob.hp = mob.hp - damage\n  this.setState({charAttackMessage: `${char.name} ${charWeapon.damMessage} the ${mob.name} for ${damage} points of damage!`});\n  if (mob.hp <= 0) {\n    this.charWins(char, mob)\n  }\n  else{\n    setTimeout(() => {this.setState({mobAttackMessage: `The ${mob.name} hits ${char.name} for ${mob.damage} points of damage!`})}, 1500);\n    char.hp = (char.hp - mob.damage)\n    this.setState({char});\n    if (char.hp <= 0){\n      setTimeout(() => {this.charDeath(char)}, 2000);\n    }\n    setTimeout(() => {this.setState({charAttackMessage: \"\"})}, 4000);\n    setTimeout(() => {this.setState({mobAttackMessage: \"\"})}, 4000);\n  }\n}\n\nmagicAttack(char, mob, charWeapon){\n  let charSpell = this.state.charSpell\n  if (char.sp >= charSpell.spCost ){\n    char.sp = char.sp - charSpell.spCost\n  let charDamage = this.rando(charSpell.damageLow, charSpell.damageHigh)\n    this.setState({charAttackMessage: `${char.name}'s ${charSpell.name} ${charSpell.damMessage} into the ${mob.name}, doing ${charDamage} damage!`})\n    mob.hp = mob.hp - charDamage\n  }\n  else {\n    this.setState({playerMessage: `You don't have enough spell points to cast that.`})\n  }\n  if (mob.hp <= 0) {\n    this.charWins(char, mob)\n  }\n  else{\n    char.hp = (char.hp - mob.damage)\n    this.setState({char});\n    setTimeout(() => {this.setState({mobAttackMessage: `The ${mob.name} hits ${char.name} for ${mob.damage} points of damage!`})}, 1500);\n    setTimeout(() => {this.setState({charAttackMessage: \"\"})}, 4000);\n    setTimeout(() => {this.setState({mobAttackMessage: \"\"})}, 4000);\n  }\n}\n\ncharWins(char, mob){\n  setTimeout(() => {this.setState({playerMessage: `${char.name} has defeated the ${mob.name}! The fight is over.`})}, 1000);\n  setTimeout(() => {this.setState({playerMessage: `${char.name} receives ${mob.xp} points of experience.`})}, 2500);\n  this.state.char.xp = this.state.char.xp + this.state.mob.xp\n  this.setState({char})\n  this.resetWindow();\n}\n\nrunAway(){\n  this.setState({playerMessage: `You turn and run!`})\n  this.resetWindow();\n}\n\ncharDeath(char){\n  this.resetWindow();\n  this.setState({playerMessage: \"You have been killed. You materialize in the home room.\"});\n  this.state.char.hp = this.state.char.hpmax;\n  this.state.char.sp = this.state.char.spmax;\n  <Rooms death={()=>this.setState({currentroom: rooms[0]})}/>\n}\n\nhealChar(){\n  let char = this.state.char\n  this.state.char.hp = this.state.char.hpmax;\n  this.state.char.sp = this.state.char.spmax;\n  this.setState({char})\n\n}\n\n\n\n\n  render(){\n    const char = this.state.char\n    const mob = this.state.mob\n    const charWeapon = this.state.charWeapon\n    const switchViewsButton = <button onClick={this.changeToCombatWindow}>Switch View</button>;\n    const getRandomMob = <button onClick={this.randomMob}>Generate Mob</button>;\n    const meleeAttackButton = <button onClick={()=> {this.meleeAttack(char, mob, charWeapon)}}>Melee Attack</button>;\n    const magicAttackButton = <button onClick={()=> {this.magicAttack(char, mob, charWeapon)}}>Cast Spell</button>\n    const runAwayButton = <button onClick={this.runAway}>Run Away!</button>\n    const charAttackMessage = this.state.charAttackMessage;\n    const mobAttackMessage = this.state.mobAttackMessage;\n    const playerMessage = this.state.playerMessage;\n\n\n\n  return (\n      <div className=\"container\">\n      <div><Nav /></div>\n        <div className=\"row toprow\">\n\n          <div className=\"col-5 box graphicsWindow\" style={{padding: \"0px\"}}>\n          <GraphicsWindow all={this.state}/>\n          </div>\n          <div className=\"col-1 box effectsWindow\">\n          </div>\n        <div className=\"col-6 box textWindow\">\n        <p>{charAttackMessage}</p>\n        <p>{mobAttackMessage}</p>\n        <p>{playerMessage}</p>\n        {this.state.combatwindow == false ? <Rooms changeRoomImage={this.changeRoomImage}/>\n        : <p className=\"combatButtons\">{meleeAttackButton}{magicAttackButton}{runAwayButton}</p>}\n        <p className=\"switchViewsButton\">{switchViewsButton}</p>\n        {this.state.combat == false & this.state.combatwindow == true ? <p>{getRandomMob}</p> : null}\n        </div>\n    </div>\n    <Nav />\n      <div className=\"row bottomrow\">\n        <div className=\"col-12 box charWindow\">\n        <React.Fragment>\n    <Switch>\n      <Route path=\"/login/\" component={Login}/>\n      <Route path=\"/character/\" children=<Character all={this.state}/>/>\n      <Route path=\"/inventory/\" component={Inventory}/>\n      <Route path=\"/magic/\" component={Magic}/>\n      <Route path=\"/\" children=<CharWindow healChar={this.healChar} all={this.state}/>/>\n      </Switch>\n    </React.Fragment>\n        </div>\n        </div>\n        </div>\n\n  );\n}\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter} from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n  <BrowserRouter>\n    <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}