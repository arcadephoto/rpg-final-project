{"version":3,"sources":["Components/TextWindow.js","Components/CharWindow.js","images/dungeonWalk.gif","images/gate.jpg","images/castle.jpg","images/street.jpg","images/dungeonStatic.jpg","Components/GraphicsWindow.js","roomlist.js","Components/Rooms.js","Components/CombatWindow.js","Components/Login.js","Components/Character.js","Components/Inventory.js","Components/Nav.js","Components/Magic.js","Components/CharCreate.js","Components/JobDropdown.js","moblist.js","App.js","reportWebVitals.js","index.js"],"names":["Component","name","location","this","level","ac","maxhp","currenthp","maxsp","currentsp","job","items","weapons","armor","north","south","east","west","roomid","CharWindow","props","state","defaultChar","isLoggedIn","Cookies","get","userId","localStorage","getItem","saveChar","bind","char","fetch","id","method","headers","body","JSON","stringify","undefined","all","charWeapon","onClick","healChar","className","hp","hpmax","sp","spmax","xp","GraphicsWindow","src","image","alt","rooms","desc","Rooms","moveMsg","currentroom","dir","move","e","dest","target","title","filter","room","changeRoomImage","dungeonWalk","dungeonStatic","setState","setTimeout","roomname","nsew","Login","inSession","username","email","password","password1","password2","data","hasProfile","charData","accountData","hasAccount","handleInput","handleLogin","reset","deleteChar","options","then","response","ok","json","character","window","reload","obj","a","preventDefault","handleError","err","console","warn","catch","key","set","event","value","formData","FormData","append","remove","clear","charId","registerForm","onSubmit","handleRegistration","type","placeholder","onChange","loginForm","createProfile","logOutForm","handleLogout","accountChar","accountInfo","accountName","charInfo","Character","charSheet1","charSheet2","charSheet3","Inventory","Nav","to","Magic","CharCreate","attack","health","magic","str","int","dex","con","available","completed","handleDropdown","handleSubmit","statUp","statDown","stat","tar","newStat","avail","alert","charCreateForm","readOnly","hidden","stats","createMessage","moblist","mobId","damage","weapon","damMessage","App","combatwindow","combat","mob","charSpell","charAttackMessage","mobAttackMessage","playerMessage","currentRoom","immWindow","charDeath","changeToCombatWindow","meleeAttack","magicAttack","runAway","rando","resetWindow","randomMob","charWins","immtest","handleImmInput","goto","lvl","class","weaponId","damageLow","damageHigh","spellId","spCost","img","img2","min","max","Math","floor","random","rand","length","charDamage","switchViewsButton","getRandomMob","meleeAttackButton","magicAttackButton","runAwayButton","command","style","padding","Fragment","path","children","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.87cbf63e.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport '../App.css';\n\n\nclass TextWindow extends Component{\n\n\n\n    render(){\n\n  return (\n    <div className=\"App\">\n    <h2 className=\"roomHead\">Room Name</h2>\n    <p>You are facing north.</p>\n    <p>The imposing stone towers of The Keep stand in the distance. A\n    wide flagstone road leads north, toward the Keep.</p>\n    <br/>\n    <br/>\n    <br/>\n    <div>\n    [N]north\n    [S]outh\n    [E]ast\n    [W]est\n    <input className=\"direction\"></input></div>\n\n    </div>\n  );\n}\n}\n\n\n\nfunction Room(north, south, east, west){\n  this.name = \"\";\n  this.north = north;\n  this.south = south;\n  this.east = east;\n  this.west = west;\n  this.roomid = \"\";\n\n}\n\nfunction Player(name, location){\n  this.name = name;\n  this.location = \"\";\n  this.level = \"\";\n  this.ac = \"\";\n  this.maxhp = \"\";\n  this.currenthp = \"\";\n  this.maxsp = \"\";\n  this.currentsp = \"\";\n  this.job = \"\";\n  this.items = [];\n  this.weapons = [];\n  this.armor = [];\n}\n\n\nfunction map(){\n  console.log(\"Future map function\");\n}\n\nfunction n(player, room){\n  const msg = \"You walk to the north\";\n  const loc = player.location;\n  goto(player, room);\n\n}\n\nfunction goto(player, room){\n  console.log(player, room);\n\n}\n\nconst player1 = new Player(\"player1\", 1);\nconst room1 = new Room(2);\n\n// n(player1, room1);\n\n\nexport default TextWindow;\n","import React, {Component} from 'react';\nimport Cookies from 'js-cookie';\nimport '../App.css';\n\n\nclass CharWindow extends Component{\n  constructor (props){\n    super(props);\n    this.state =  {\n      defaultChar: {},\n      isLoggedIn: !!Cookies.get('Authorization'),\n      userId: !!localStorage.getItem('rpguser'),\n    }\nthis.saveChar = this.saveChar.bind(this);\n  }\n\n\nsaveChar(char){\n  fetch(`/characters/save/${char.id}/`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n        'X-CSRFToken': Cookies.get('csrftoken'),\n      },\n      body: JSON.stringify({...char}),\n    })\n}\n\n\n\n  render(){\n    const char = this.props.all.char != undefined ? this.props.all.char : this.props.all.defaultChar\n    const charWeapon = this.props.all.charWeapon\n    const saveChar = <button onClick={()=>this.saveChar(char)}>Save Character</button>\n    const healChar = <button onClick={this.props.healChar}>Heal Character</button>\n\n  return (\n    <div className=\"App\">\n    <div className=\"row charbanner\">\n    <div className=\"col-3 char\">Name</div>\n    <div className=\"col-2 class\">Class</div>\n    <div className=\"col-1 lvl\">Lvl</div>\n    <div className=\"col-1 ac\">AC</div>\n    <div className=\"col-1 hp\">HP</div>\n    <div className=\"col-1 sp\">SP</div>\n    <div className=\"col-1 xp\">XP</div>\n    <div className=\"col-1 weapon\">Weapon</div>\n    </div>\n    <div className=\"row charSpace\"></div>\n    <div className=\"row char1row\">\n    <p className=\"col-3 char1\">{char.name}</p>\n    <p className=\"col-2 cl1\">{char.job}</p>\n    <p className=\"col-1 lvl1\">{char.level}</p>\n    <p className=\"col-1 ac1\">{char.ac}</p>\n    <p className=\"col-1 hp1\">{char.hp}/{char.hpmax}</p>\n    <p className=\"col-1 sp1\">{char.sp != null ? `${char.sp}/${char.spmax}` : 'N/A'}</p>\n    <p className=\"col-1 xp1\">{char.xp}</p>\n    <p className=\"col-1 weapon\">{charWeapon.name}</p>\n    </div>\n    <div className=\"row char2row\">\n    <p className=\"col-3 char2\"></p>\n    <p className=\"col-2 lvl2\"></p>\n    <p className=\"col-2 ac2\"></p>\n    <p className=\"col-2 hp2\"></p>\n    <p className=\"col-2 sp2\"></p>\n    <p className=\"col-1 cl2\"></p>\n    </div>\n    <div className=\"row char3row\">\n    <p className=\"col-3 char3\"></p>\n    <p className=\"col-2 lvl3\"></p>\n    <p className=\"col-2 ac3\"></p>\n    <p className=\"col-2 hp3\"></p>\n    <p className=\"col-2 sp3\"></p>\n    <p className=\"col-1 cl3\"></p>\n    </div>\n    {saveChar}\n    {healChar}\n    </div>\n  );\n}\n}\nexport default CharWindow;\n","export default __webpack_public_path__ + \"static/media/dungeonWalk.57773dc4.gif\";","export default __webpack_public_path__ + \"static/media/gate.4fc8e47b.jpg\";","export default __webpack_public_path__ + \"static/media/castle.df9d2fb9.jpg\";","export default __webpack_public_path__ + \"static/media/street.f9fdf14e.jpg\";","export default __webpack_public_path__ + \"static/media/dungeonStatic.2db142ce.jpg\";","import React, {Component} from 'react';\nimport '../App.css';\nimport gate from '../images/gate.jpg'\nimport castle from '../images/castle.jpg'\nimport street from '../images/street.jpg'\nimport dungeonWalk from '../images/dungeonWalk.gif'\nimport dungeonStatic from '../images/dungeonStatic.jpg'\n\nclass GraphicsWindow extends Component{\n  constructor (props){\n        super(props);\n        this.state = {\n\n        }\n      }\n\n  render(){\n\n\n  return (\n    <div>\n    <img className=\"img img-fluid\" src={this.props.all.image} alt=\"gate\" />\n    </div>\n  );\n}\n}\nexport default GraphicsWindow;\n","const rooms = [{\n        id: 1,\n        name: \"Home Base\",\n        desc: \"A workshop filled with building materials and monster parts.\",\n        north: 2,\n        south: null,\n        east: 8,\n        west: null,\n      },\n      {\n        id: 2,\n        name: 'Room to the North',\n        desc: `A surprisingly difficult to reach destination. There are exits\n        to the north and south.`,\n        north: 3,\n        south: 1,\n        east: null,\n        west: null,\n      },\n      {\n        id: 3,\n        name: 'Center of the Build',\n        desc: 'A soaring cavern with exits in all directions',\n        north: 5,\n        south: 2,\n        east: 6,\n        west: 4,\n      },\n      {\n        id: 4,\n        name: 'The Western Chamber',\n        desc: `A quiet space for working and testing. There's an exit to the east`,\n        north: null,\n        south: null,\n        east: 3,\n        west: null,\n      },\n      {\n        id: 5,\n        name: 'The Waterfall',\n        desc: `A cold, soaring chamber dominated by waterfall plunging from a fissure in the rock.`,\n        north: null,\n        south: 3,\n        east: null,\n        west: null,\n      },\n      {\n        id: 6,\n        name: 'The Eastern Chamber',\n        desc: `A large cavern strewn with discarded monster bits.`,\n        north: null,\n        south: 7,\n        east: null,\n        west: 3,\n      },\n      {\n        id: 7,\n        name: 'The Eastern Corridor',\n        desc: `A long stone cavern filled with the glowing golden light of hundreds\n        of torches. Just like that Police video.`,\n        north: 6,\n        south: 8,\n        east: null,\n        west: null,\n      },\n      {\n        id: 8,\n        name: `The Study`,\n        desc: `A small, quiet room with floor-to-ceiling bookshelves and many\n        comfortable chairs.`,\n        north: 7,\n        south: null,\n        east: null,\n        west: 1,\n      }\n]\nexport default rooms\n","import React, {Component} from 'react';\nimport '../App.css';\nimport rooms from '../roomlist';\nimport dungeonWalk from '../images/dungeonWalk.gif'\nimport dungeonStatic from '../images/dungeonStatic.jpg'\n\nclass Rooms extends Component{\n  constructor (props){\n    super(props);\n    this.state = {\n      moveMsg: \"\",\n      currentroom: rooms[0],\n      dir: {},\n            }\n\nthis.move = this.move.bind(this);\n  }\n\n\nmove(e){\nlet dir = e.target.title\nlet dest;\nif (dir == \"north\"){\n  dest = rooms.filter(room => room.id == this.state.currentroom.north)}\nif (dir == \"south\"){\n  dest = rooms.filter(room => room.id == this.state.currentroom.south)}\nif (dir == \"east\"){\n  dest = rooms.filter(room => room.id == this.state.currentroom.east)}\nif (dir == \"west\"){\n  dest = rooms.filter(room => room.id == this.state.currentroom.west)}\ndest = dest[0]\nif (dest) {\n  this.props.changeRoomImage(dungeonWalk, dungeonStatic)\n  this.setState({moveMsg: `You walk to the ${dir}.`})\n  this.setState({name: \"\", desc: \"\"});\n  setTimeout(() => {this.setState({moveMsg: \"\"})}, 1000);\n  setTimeout(() => {this.setState({currentroom: dest})}, 1000);\n}\nelse {\n  this.setState({moveMsg: \"There's no exit in that direction!\"})\n}\n}\n\n\n  render(){\n    const roomname = this.state.currentroom.name;\n    const desc = this.state.currentroom.desc;\n    const nsew = <>\n    {this.state.currentroom.north ? <span title=\"north\" onClick={this.move}>{`<N>`}</span> : null}\n    {this.state.currentroom.south ? <span title=\"south\" onClick={this.move}>{`<S>`}</span> : null}\n    {this.state.currentroom.east ? <span title=\"east\" onClick={this.move}>{`<E>`}</span> : null}\n    {this.state.currentroom.west ?<span title=\"west\" onClick={this.move}>{`<W>`}</span> : null}\n    </>\n\n    let moveMsg = this.state.moveMsg\n\n\n\n\n  return (\n    <div>\n    <h1>{roomname}</h1>\n    <p id=\"moveMsg\">{moveMsg}</p>\n    <p>{desc}</p>\n    <p id=\"nsew\">{nsew}</p>\n    </div>\n  );\n}\n}\nexport default Rooms;\n","import React, {Component} from 'react';\nimport '../App.css';\n\n\nclass CombatWindow extends Component{\n  constructor (props){\n    super(props);\n    this.state =  {\n}\nthis.childDamage = this.childDamage.bind(this);\n  }\n\n\n\n  componentDidMount(){\n    // this.setState(this.props.all)\n}\n\nchildDamage(){\n  let char = this.props.all.char\n  char.hp = char.hp - 1;\n  this.setState({char});\n  console.log(char);\n}\n\n\n\n  render(){\n    const char = this.props.all.char\n    const charWeapon = this.props.all.charWeapon\n    const mob = this.props.all.mob\n\nconst combatMessages = <section>These messages will be generated by the combat routine, {char.name}</section>\n\nconst childDamageTest = <section><button onClick={this.childDamage}>Child Damage</button></section>\n  return (\n    <div>\n    {combatMessages}\n    {childDamageTest}\n    </div>\n  );\n}\n}\nexport default CombatWindow;\n","import React, {Component} from 'react'\nimport Cookies from 'js-cookie'\nimport '../App.css';\n\nclass Login extends Component {\n  constructor (props){\n        super(props);\n        this.state = {\n          isLoggedIn: !!Cookies.get('Authorization'),\n          inSession: !!Cookies.get('sessionid'),\n          username: \"\",\n          email: \"\",\n          password: \"\",\n          password1: \"\",\n          password2: \"\",\n          data: [],\n          hasProfile: false,\n          charData: null,\n          accountData: [],\n          hasAccount: false,\n        }\n    this.handleInput = this.handleInput.bind(this);\n    this.handleLogin = this.handleLogin.bind(this);\n    this.reset = this.reset.bind(this);\n    this.deleteChar = this.deleteChar.bind(this);\n      }\n\n\ncomponentDidMount(){\n    const options = {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n          'X-CSRFToken': Cookies.get('csrftoken'),\n        },\n    };\n    fetch('/accounts/detail/', options)\n    .then(response => {\n      if(response.ok){\n        this.setState({hasAccount: true})}\n        return response.json()\n    .then(response => this.setState({accountData: response, charData: response.character}))})\n  }\n\n\n\nreset(){\n  this.setState({username: \"\"})\n  this.setState({password: \"\"})\n  window.location.reload();\n}\n\n\n  async handleLogin(e, obj){\n    e.preventDefault();\n    const options = {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'X-CSRFToken': Cookies.get('csrftoken'),\n        },\n        body: JSON.stringify(obj),\n    };\n    const handleError = (err) => console.warn(err);\n    const response = await fetch('/rest-auth/login/', options);\n    const data = await response.json().catch(handleError);\n    if(data.key) {\n    Cookies.set('Authorization', `Token ${data.key}`);\n    // localStorage.setItem('rpguser', this.state.username)\n    }\n    this.reset();\n  }\n\n\n\n\nhandleInput(event){\n          this.setState({[event.target.name]: event.target.value});\n        }\n\n\n\nasync handleRegistration(e, obj){\n  e.preventDefault();\n\n      const options = {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'X-CSRFToken': Cookies.get('csrftoken'),\n        },\n        body: JSON.stringify(obj),\n      };\n      const handleError = (err) => console.warn(err);\n      const response = await fetch('/rest-auth/registration/', options);\n      const data = await response.json().catch(handleError);\n\n      if(data.key) {\n        Cookies.set('Authorization', `Token ${data.key}`);\n      }\n      this.setState({username: \"\", email: \"\", password1: \"\", password2: \"\"})\n    }\n\n\n\nasync createProfile(){\n\n\n    let formData = new FormData();\n    formData.append('user', 1);\n\n    const options = {\n      method: 'POST',\n      headers: {\n        'X-CSRFToken': Cookies.get('csrftoken'),\n      },\n      body: formData,\n    }\n\n    await fetch('/profiles/', options);\n    }\n\n\n\n    handleLogout(){\n      const options = {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json',\n              'X-CSRFToken': Cookies.get('csrftoken'),\n            },\n        };\n        fetch(\"/rest-auth/logout/\", options)\n          .then(response => response.json())\n          .then(response => this.setState({data: response}));\n          Cookies.remove('Authorization');\n          Cookies.remove('sessionid');\n          localStorage.clear()\n          window.location.reload();\n\n\n    }\n\ndeleteChar(charId){\n  const options = {\n        method: 'DELETE',\n        headers: {\n          'Content-Type': 'application/json',\n          'X-CSRFToken': Cookies.get('csrftoken'),\n        },\n    };\n    fetch(`/characters/delete/${charId.id}/`, options)\n      .then(response => response.json())\n      .then(response => this.setState({data: response}));\n}\n\n\n  render(){\nconst charData = [this.props.all.charData]\nconst registerForm = (<form onSubmit={(e) => this.handleRegistration(e, this.state)}>\n      <input className=\"input-group form-control\" type=\"text\" placeholder=\"username\" name=\"username\" value={this.state.username} onChange={this.handleInput}/>\n      <input className=\"input-group form-control\" type=\"email\" placeholder=\"email\" name=\"email\" value={this.state.email} onChange={this.handleInput}/>\n      <input className=\"input-group form-control\" type=\"password\" placeholder=\"password\" name=\"password1\" value={this.state.password1} onChange={this.handleInput}/>\n      <input className=\"input-group form-control\" type=\"password\" placeholder=\"confirm pass\" name=\"password2\" value={this.state.password2} onChange={this.handleInput}/>\n      <p><button className=\"btn btn-secondary\" type=\"submit\">Register</button></p>\n      </form>)\n\n\nconst profileCreate =\n<form>\n<p>Profile fields will go here.</p>\n<div className=\"profileCreateForm\"><button className=\"btn btn-secondary\" onClick={this.createProfile}>Create Profile</button></div>\n</form>\n\nconst loginForm = (<form onSubmit={(e) => this.handleLogin(e, this.state)}>\n      <p>Welcome! Please log in, or register to create your own character.</p>\n      <input className=\"input-group\" type=\"text\" placeholder=\"username\" name=\"username\" value={this.state.username} onChange={this.handleInput}/>\n      <input className=\"input-group\" type=\"password\" placeholder=\"password\" name=\"password\" value={this.state.password} onChange={this.handleInput}/>\n      <button className=\"btn btn-secondary\" type=\"submit\">Log In</button>\n      </form>)\n\n\nconst logOutForm = (<form onSubmit={(e) => this.handleLogout(e, this.state)}>\n<button className=\"btn btn-secondary\" type=\"submit\">Log Out</button></form>)\n\nconst accountChar = this.state.charData\nconst accountInfo = this.state.accountData\nconst accountName = this.state.hasAccount === true ? <p>Account: {accountInfo.username}</p> : null\nconst charInfo = this.state.hasAccount === true && this.state.charData !== null ?\n<div>\n<p>Available characters:</p>\n<span>{accountChar.name} - Level {accountChar.level} {accountChar.job}</span><button onClick={()=>this.deleteChar(accountChar)}>Delete</button></div> : <p>Please create a character.</p>\n\n\n\n      return(\n        <div className=\"loginForm\">\n        {this.state.isLoggedIn === false && this.state.inSession === false ? loginForm : logOutForm}\n        {this.state.isLoggedIn === false ? registerForm : null}\n        {accountName}\n        {charInfo}\n        </div>\n      );\n    }\n  }\n  export default Login\n","import React, {Component} from 'react';\nimport Cookies from 'js-cookie';\nimport {useState} from 'react';\nimport '../App.css';\n\nclass Character extends Component {\n  constructor (props){\n        super(props);\n        this.state = {\n        isLoggedIn: !!Cookies.get('Authorization'),\n        }\n      }\n        render(){\nconst char = this.props.all.char != undefined ? this.props.all.char : this.props.all.defaultChar\nconst charSheet1 = <div className=\"charSheet\">\n<p>Name: {char.name}</p>\n<p>Class: {char.job}</p>\n<p>Level: {char.level}</p>\n</div>\nconst charSheet2 = <div className=\"charSheet\">\n<p>Armor: {char.ac}</p>\n<p>Health: {char.hp}</p>\n<p>Max Health: {char.hpmax}</p>\n</div>\nconst charSheet3 = <div className=\"charSheet\">\n<p>Magic: {char.sp}</p>\n<p>Max Magic: {char.spmax}</p>\n<p>Experience: {char.xp}</p>\n</div>\n\n\n  return(\nthis.state.isLoggedIn ? <section>\n    <div className=\"row\">\n    <div className=\"col\">\n    {charSheet1}\n    </div>\n    <div className=\"col\">\n    {charSheet2}\n    </div>\n    <div className=\"col\">\n    {charSheet3}\n    </div>\n    </div></section>\n   : null\n\n  );\n}\n}\nexport default Character;\n","\nimport React, {Component} from 'react';\nimport '../App.css';\n\nclass Inventory extends Component {\n  constructor (props){\n        super(props);\n        this.state = {\n\n        }\n      }\n        render(){\n\n  return(\n\n    <div >\n    Inventory!\n    </div>\n\n  );\n}\n}\nexport default Inventory;\n","import {NavLink} from 'react-router-dom';\nimport React, {Component} from 'react';\nimport Login from './Login'\nimport Character from './Character'\nimport Inventory from './Inventory'\nimport '../App.css';\n\nclass Nav extends Component {\n  constructor (props){\n        super(props);\n        this.state = {\n\n        }\n      }\n\n      render(){\n\n\n\n\n  return(\n    <nav className=\"navbar navbar-expand-lg\">\n    <div className=\"container-fluid\">\n    <div className=\"navBox\"><NavLink to=\"/\">Game</NavLink></div>\n    <div className=\"navBox\"><NavLink to=\"/login/\">Account</NavLink></div>\n    <div className=\"navBox\"><NavLink to=\"/character/create/\">Create Char</NavLink></div>\n    <div className=\"navBox\"><NavLink to=\"/character/\">Character</NavLink></div>\n    <div className=\"navBox\"><NavLink to=\"/magic/\">Magic</NavLink></div>\n    <div className=\"navBox\"><NavLink to=\"/inventory/\">Inventory</NavLink></div>\n    </div>\n    </nav>\n\n  );\n}\n}\nexport default Nav;\n","import React, {Component} from 'react';\nimport '../App.css';\n\nclass Magic extends Component {\n  constructor (props){\n        super(props);\n        this.state = {\n\n        }\n      }\n        render(){\n\n  return(\n\n    <div >\n    Magic\n    </div>\n\n  );\n}\n}\nexport default Magic;\n","import React, {Component} from 'react';\nimport Cookies from 'js-cookie';\nimport JobDropdown from './JobDropdown'\nimport {useState} from 'react';\nimport '../App.css';\n\nclass CharCreate extends Component {\n  constructor (props){\n        super(props);\n        this.state = {\n          name: \"\",\n          job: \"\",\n          level: 1,\n          attack: 10,\n          armor: 10,\n          health: 10,\n          magic: 10,\n          str: 10,\n          int: 10,\n          dex: 10,\n          con: 10,\n          available: 15,\n\n        isLoggedIn: !!Cookies.get('Authorization'),\n        completed: \"\",\n        }\nthis.handleInput = this.handleInput.bind(this);\nthis.handleDropdown = this.handleDropdown.bind(this);\nthis.handleSubmit = this.handleSubmit.bind(this);\nthis.statUp = this.statUp.bind(this);\nthis.statDown = this.statDown.bind(this);\n\n      }\n\n\n      handleInput(event){\n    this.setState({[event.target.name]: event.target.value});\n  }\n\n  handleDropdown(event) {\n      this.setState({job: event.target.value});\n    }\n\n\n\n    async handleSubmit(e){\n      e.preventDefault();\n      const obj = {\n        attack: this.state.attack,\n        name: this.state.name,\n        job: this.state.job,\n        level: this.state.level,\n        ac: this.state.armor,\n        hp: this.state.health,\n        sp: this.state.magic,\n        hpmax: this.state.health,\n        spmax: this.state.magic,\n        str: this.state.str,\n        int: this.state.int,\n        dex: this.state.dex,\n        con: this.state.con,\n        xp: 0,\n\n      }\n      const options = {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'X-CSRFToken': Cookies.get('csrftoken'),\n        },\n        body: JSON.stringify(obj),\n      };\n      const handleError = (err) => console.warn(err);\n      const response = await fetch('/characters/create/', options);\n      const data = await response.json().catch(handleError);\n      if(response.ok){\n        this.setState({completed: `Character ${data.name}, a level ${data.level} ${data.job}, created!`})\n        this.setState({name: \"\"})\n        this.setState({job: \"Choose\"})\n      }\n    }\n\n\nstatUp(stat){\n  const tar = stat.target.name\n  let newStat = this.state.[tar]\n  let avail = this.state.available\n  let abil\n  if (avail > 0){\n    newStat += 1\n    avail -= 1\n    this.setState({[tar]: newStat})\n    this.setState({available: avail})\n}\n  else {\n    alert('No available points')\n}\n  this.state.attack = (10 + (this.state.str-10))\n  this.state.health = (10 + (this.state.con-10))\n  this.state.magic = (10 + (this.state.int-10))\n  this.state.armor = (10 + (this.state.dex-10))\n}\n\nstatDown(stat){\n  const tar = stat.target.name\n  let newStat = this.state.[tar]\n  let avail = this.state.available\n  if (newStat >= 6){\n  newStat -= 1\n  avail += 1\n  this.setState({[tar]: newStat})\n  this.setState({available: avail})\n}\nelse{\n  alert('This stat cannot go lower')\n}\nthis.state.attack = (10 + (this.state.str-10))\nthis.state.health = (10 + (this.state.con-10))\nthis.state.magic = (10 + (this.state.int-10))\nthis.state.armor = (10 + (this.state.dex-10))\n}\n\n\n\n        render(){\n\n          const charCreateForm = <form onSubmit={this.handleSubmit} className=\"charCreateForm\">\n          <label>Character Name: </label>\n          <input type=\"text\" name=\"name\" value={this.state.name} onChange={this.handleInput} />\n            <label>\n              Character Class:\n              <select value={this.state.job} onChange={this.handleDropdown}>\n                <option value=\"Choose\">Choose</option>\n                <option value=\"Warrior\">Warrior</option>\n                <option value=\"Magician\">Magician</option>\n              </select>\n            </label>\n          <label>Level: </label>\n          <input className=\"createField\" type=\"text\" placeholder=\"Lvl 1\" name=\"level\" value={this.state.level} onChange={this.handleInput} readOnly/>\n          <label>Armor: </label>\n          <input className=\"createField\" type=\"text\" placeholder=\"Armor\" name=\"armor\" value={this.state.armor} onChange={this.handleInput} readOnly/>\n          <label>Health: </label>\n          <input className=\"createField\" type=\"text\" placeholder=\"Health\" name=\"health\" value={this.state.health} onChange={this.handleInput} readOnly/>\n          <label>Magic: </label>\n          <input className=\"createField\" type=\"text\" placeholder=\"Magic\" name=\"magic\" value={this.state.magic} onChange={this.handleInput} readOnly/>\n          <br/>\n          <input hidden name=\"hpmax\" value={this.state.health} readOnly/>\n          <input hidden name=\"spmax\" value={this.state.magic} readOnly/>\n          <input hidden name=\"xp\" value='0' readOnly/>\n          <br/><button className=\"btn btn-success\" type=\"submit\">Save this Character</button></form>\n\n  const stats = <div>\n          <label>Strength: </label>\n          <input className=\"createField\" type=\"text\" name=\"str\" value={this.state.str}readOnly/><button name=\"str\" value={this.state.str} onClick={this.statUp}>+</button><button value={this.state.str} name=\"str\" onClick={this.statDown}>-</button>\n          <label>Intelligence: </label>\n          <input className=\"createField\" type=\"text\" name=\"int\" value={this.state.int}readOnly/><button name=\"int\" value={this.state.int} onClick={this.statUp}>+</button><button name=\"int\" value={this.state.int} onClick={this.statDown}>-</button>\n          <label>Dexterity: </label>\n          <input className=\"createField\" type=\"text\" name=\"dex\" value={this.state.dex}readOnly/><button name=\"dex\" value={this.state.dex} onClick={this.statUp}>+</button><button name=\"dex\" value={this.state.dex} onClick={this.statDown}>-</button>\n          <label>Constitution: </label>\n          <input className=\"createField\" type=\"text\" name=\"con\" value={this.state.con}readOnly/><button name=\"con\" value={this.state.con} onClick={this.statUp}>+</button><button name=\"con\" value={this.state.con} onClick={this.statDown}>-</button>\n          <label>Available Points</label>\n          <input className=\"createField\" type=\"int\" name=\"available\" value={this.state.available} readOnly/>\n          </div>\n\nconst createMessage = `${this.state.completed}`\n\n\n\n          return(\n            <div>\n            {charCreateForm}\n            {stats}\n            {createMessage}\n            </div>\n\n\n          );\n        }\n      }\n\n  export default CharCreate\n","import React, {Component} from 'react';\nimport Cookies from 'js-cookie';\nimport {useState} from 'react';\nimport '../App.css';\n\nclass JobDropdown extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {value: ''};\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({value: event.target.value});\n  }\n\n  handleSubmit(event) {\n    alert('A name was submitted: ' + this.state.value);\n    event.preventDefault();\n  }\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <label>\n          Pick your favorite flavor:\n          <select value={this.state.value} onChange={this.handleChange}>\n            <option value=\"Warrior\">Warrior</option>\n            <option value=\"Magician\">Magician</option>\n          </select>\n        </label>\n        <input type=\"submit\" value=\"Submit\" />\n      </form>\n    );\n  }\n}\n\nexport default JobDropdown\n","const moblist = [\n\n      {\n        mobId: 1,\n        name: \"Bob the Dummy\",\n        damage: 1,\n        hp: 10,\n        hpmax: 10,\n        sp: \"null\",\n        spmax: \"null\",\n        ac: 10,\n        weapon: \"wooden sword\",\n        damMessage: \"pokes\",\n        xp: 10,\n      },\n\n      {\n        mobId: 2,\n        name: \"drop bear\",\n        damage: 1,\n        hp: 10,\n        hpmax: 10,\n        sp: \"null\",\n        spmax: \"null\",\n        ac: 10,\n        weapon: \"claws\",\n        damMessage: \"rakes\",\n        xp: 10,\n      },\n\n      {\n        mobId: 3,\n        name: \"giant tarantula\",\n        damage: 1,\n        hp: 12,\n        hpmax: 12,\n        sp: \"null\",\n        spmax: \"null\",\n        ac: 12,\n        weapon: \"fangs\",\n        damMessage: \"pierce\",\n        xp: 10,\n      },\n\n      {\n        mobId: 4,\n        name: \"hobgoblin\",\n        damage: 1,\n        hp: 12,\n        hpmax: 12,\n        sp: \"null\",\n        spmax: \"null\",\n        ac: 9,\n        weapon: \"short sword\",\n        damMessage: \"slashes\",\n        xp: 10,\n      },\n      {\n        mobId: 5,\n        name: \"giant rat\",\n        damage: 1,\n        hp: 7,\n        hpmax: 7,\n        sp: \"null\",\n        spmax: \"null\",\n        ac: 8,\n        weapon: \"teeth\",\n        damMessage: \"gouge\",\n        xp: 10,\n      },\n      {\n        mobId: 6,\n        name: \"black slime\",\n        damage: 1,\n        hp: 6,\n        hpmax: 6,\n        sp: \"null\",\n        spmax: \"null\",\n        ac: 12,\n        weapon: \"acid goo\",\n        damMessage: \"burns\",\n        xp: 10,\n      },\n\n      {\n        mobId: 7,\n        name: \"kobold\",\n        damage: 1,\n        hp: 13,\n        hpmax: 13,\n        sp: \"null\",\n        spmax: \"null\",\n        ac: 10,\n        weapon: \"rusty knife\",\n        damMessage: \"pierces\",\n        xp: 10\n      },\n]\nexport default moblist\n","import React, {Component} from 'react';\nimport {useState} from 'react';\nimport {Route, Switch} from 'react-router-dom';\nimport TextWindow from './Components/TextWindow';\nimport CharWindow from './Components/CharWindow';\nimport GraphicsWindow from './Components/GraphicsWindow';\nimport Rooms from './Components/Rooms';\nimport CombatWindow from './Components/CombatWindow'\nimport Nav from './Components/Nav'\nimport Inventory from './Components/Inventory'\nimport Character from './Components/Character'\nimport Login from './Components/Login'\nimport Cookies from 'js-cookie';\nimport {Modal, Button} from \"react-bootstrap\";\nimport Magic from './Components/Magic'\nimport CharCreate from './Components/CharCreate'\nimport moblist from './moblist'\nimport rooms from './roomlist'\nimport dungeonStatic from './images/dungeonStatic.jpg'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\n\n\nclass App extends Component{\n  constructor (props){\n    super(props);\n    this.state = {\n      combatwindow: false,\n      combat: false,\n      char : null,\n      charWeapon: {},\n      mob: {},\n      charSpell: {},\n      charAttackMessage: \"\",\n      mobAttackMessage: \"\",\n      data: [],\n      isLoggedIn: !!Cookies.get('Authorization'),\n      image: dungeonStatic,\n      defaultChar: {},\n      playerMessage: \"\",\n      currentRoom: rooms[2],\n      immWindow: \"\",\n    }\nthis.charDeath = this.charDeath.bind(this);\nthis.changeToCombatWindow = this.changeToCombatWindow.bind(this);\nthis.meleeAttack = this.meleeAttack.bind(this);\nthis.magicAttack = this.magicAttack.bind(this);\nthis.runAway = this.runAway.bind(this);\nthis.rando = this.rando.bind(this);\nthis.resetWindow = this.resetWindow.bind(this);\nthis.randomMob = this.randomMob.bind(this);\nthis.healChar = this.healChar.bind(this);\nthis.charWins = this.charWins.bind(this);\nthis.changeRoomImage = this.changeRoomImage.bind(this);\nthis.handleInput = this.handleInput.bind(this);\nthis.immtest = this.immtest.bind(this);\nthis.handleImmInput = this.handleImmInput.bind(this);\nthis.goto = this.goto.bind(this);\n  }\n\n  componentDidMount(){\n    const defaultChar = {\n            charId: 1,\n            name: \"Please log in to load your character\",\n            lvl: null,\n            ac: null,\n            hpmax: null,\n            hp: null,\n            spmax: null,\n            sp: null,\n            class: null,\n            weapon: null,\n            xp: null,\n          }\n\n          const char = {\n                  charId: 1,\n                  name: \"Please log in to load your character\",\n                  lvl: null,\n                  ac: null,\n                  hpmax: null,\n                  hp: null,\n                  spmax: null,\n                  sp: null,\n                  class: null,\n                  weapon: null,\n                  xp: null,\n                }\n\n    const charWeapon = {\n            weaponId: 1,\n            name: \"longsword\",\n            damageLow: 2,\n            damageHigh: 5,\n            damMessage: \"slashes\",\n          }\n\n    const mob = {\n            mobId: 1,\n            name: \"Bob the Dummy\",\n            damage: 1,\n            hp: 10,\n            hpmax: 10,\n            sp: \"null\",\n            spmax: \"null\",\n            ac: 10,\n            weapon: \"wooden sword\",\n            damMessage: \"pokes\",\n    }\n    const charSpell = {\n            spellId: 1,\n            name: \"force bolt\",\n            damageLow: 2,\n            damageHigh: 8,\n            spCost: 4,\n            damMessage: \"slams\"\n    }\n\n          // this.setState({char})\n          // this.setState({mob})\n          // char default replaced by player character from database\n          // mob default replaced by random mob generator\n          this.setState({defaultChar});\n          this.setState({charWeapon})\n          this.setState({charSpell})\n\n\n        fetch(\"/characters/\")\n      .then(response => response.json())\n      .then(response => response[0])\n      .then(response => this.setState({char: response}))\n\n\n  }\n\nchangeToCombatWindow(){\n  if (this.state.combatwindow == false) {\n  this.setState({combatwindow: true})\n}\nelse {\n  this.setState({combatwindow: false})\n}\n}\n\nchangeRoomImage(img, img2){\n  this.setState({image: img})\n  setTimeout(() => {this.setState({image: img2})}, 1500);\n}\n\nrando(min, max) {\n  return Math.floor(Math.random() * (max - min) ) + min;\n}\n\nrandomMob(){\n  const rand = Math.floor(Math.random() * (moblist.length - 1) ) + 1;\n  const mob = moblist[rand]\n  this.setState({mob})\n  setTimeout(() => {this.setState({playerMessage: `A ${this.state.mob.name} has entered the fight!`})}, 0);\n  setTimeout(() => {this.setState({playerMessage: \"\"})}, 2000);\n\n}\n\n\nresetWindow(){\n  setTimeout(() => {this.setState({combat: false})}, 4000);\n  setTimeout(() => {this.setState({combatwindow: false})}, 4000);\n  setTimeout(() => {this.setState({charAttackMessage: \"\"})}, 4000);\n  setTimeout(() => {this.setState({mobAttackMessage: \"\"})}, 4000);\n  setTimeout(() => {this.setState({playerMessage: \"\"})}, 4000);\n}\n\n\n\nmeleeAttack(char, mob, charWeapon) {\n  if (this.state.combat == false){\n    this.setState({combat:  true});\n    mob.hp = mob.hpmax\n    char.hp = char.hpmax\n  }\n  const damage = this.rando(charWeapon.damageLow, charWeapon.damageHigh)\n  mob.hp = mob.hp - damage\n  this.setState({charAttackMessage: `${char.name} ${charWeapon.damMessage} the ${mob.name} for ${damage} points of damage!`});\n  if (mob.hp <= 0) {\n    this.charWins(char, mob)\n  }\n  else{\n    setTimeout(() => {this.setState({mobAttackMessage: `The ${mob.name} hits ${char.name} for ${mob.damage} points of damage!`})}, 1500);\n    char.hp = (char.hp - mob.damage)\n    this.setState({char});\n    if (char.hp <= 0){\n      setTimeout(() => {this.charDeath(char)}, 2000);\n    }\n    setTimeout(() => {this.setState({charAttackMessage: \"\"})}, 4000);\n    setTimeout(() => {this.setState({mobAttackMessage: \"\"})}, 4000);\n  }\n}\n\nmagicAttack(char, mob, charWeapon){\n  let charSpell = this.state.charSpell\n  if (char.sp >= charSpell.spCost ){\n    char.sp = char.sp - charSpell.spCost\n  let charDamage = this.rando(charSpell.damageLow, charSpell.damageHigh)\n    this.setState({charAttackMessage: `${char.name}'s ${charSpell.name} ${charSpell.damMessage} into the ${mob.name}, doing ${charDamage} damage!`})\n    mob.hp = mob.hp - charDamage\n  }\n  else {\n    this.setState({playerMessage: `You don't have enough spell points to cast that.`})\n  }\n  if (mob.hp <= 0) {\n    this.charWins(char, mob)\n  }\n  else{\n    char.hp = (char.hp - mob.damage)\n    this.setState({char});\n    setTimeout(() => {this.setState({mobAttackMessage: `The ${mob.name} hits ${char.name} for ${mob.damage} points of damage!`})}, 1500);\n    setTimeout(() => {this.setState({charAttackMessage: \"\"})}, 4000);\n    setTimeout(() => {this.setState({mobAttackMessage: \"\"})}, 4000);\n  }\n}\n\ncharWins(char, mob){\n  setTimeout(() => {this.setState({playerMessage: `${char.name} has defeated the ${mob.name}! The fight is over.`})}, 1000);\n  setTimeout(() => {this.setState({playerMessage: `${char.name} receives ${mob.xp} points of experience.`})}, 2500);\n  this.state.char.xp = this.state.char.xp + this.state.mob.xp\n  this.setState({char})\n  this.resetWindow();\n}\n\nrunAway(){\n  this.setState({playerMessage: `You turn and run!`})\n  this.resetWindow();\n}\n\ncharDeath(char){\n  this.resetWindow();\n  this.setState({playerMessage: \"You have been killed. You materialize in the home room.\"});\n  this.state.char.hp = this.state.char.hpmax;\n  this.state.char.sp = this.state.char.spmax;\n  <Rooms death={()=>this.setState({currentroom: rooms[0]})}/>\n}\n\nhealChar(){\n  let char = this.state.char\n  this.state.char.hp = this.state.char.hpmax;\n  this.state.char.sp = this.state.char.spmax;\n  this.setState({char})\n\n}\n\nhandleInput(event){\nthis.setState({[event.target.name]: event.target.value});\n}\n\nhandleImmInput(event){\nthis.setState({[event.target.name]: event.target.value});\n}\n\n\nimmtest(){\n  alert('This worked!')\n}\n\ngoto() {\n  alert(this.state.currentRoom);\n  this.setState({currentRoom: rooms[3]});\n}\n\n\n\n\n  render(){\n    const char = this.state.char\n    const mob = this.state.mob\n    const charWeapon = this.state.charWeapon\n    const switchViewsButton = <button onClick={this.changeToCombatWindow}>Switch View</button>;\n    const getRandomMob = <button onClick={this.randomMob}>Generate Mob</button>;\n    const meleeAttackButton = <button onClick={()=> {this.meleeAttack(char, mob, charWeapon)}}>Melee Attack</button>;\n    const magicAttackButton = <button onClick={()=> {this.magicAttack(char, mob, charWeapon)}}>Cast Spell</button>\n    const runAwayButton = <button onClick={this.runAway}>Run Away!</button>\n    const charAttackMessage = this.state.charAttackMessage;\n    const mobAttackMessage = this.state.mobAttackMessage;\n    const playerMessage = this.state.playerMessage;\n    const command = this.state.immWindow\n    const immWindow = <form onSubmit={this.[command]}>\n    <input className=\"immWindow\" type=\"text\" placeholder=\"input command\" name=\"immWindow\" value={this.state.immWindow} onChange={this.handleImmInput}/>\n    </form>\n\n\n  return (\n      <div className=\"container\">\n        <div className=\"row toprow\">\n\n          <div className=\"col-5 box graphicsWindow\" style={{padding: \"0px\"}}>\n          <GraphicsWindow all={this.state}/>\n          </div>\n          <div className=\"col-1 effectsWindow\">\n          </div>\n        <div className=\"col-6 box textWindow\">\n        <p>{charAttackMessage}</p>\n        <p>{mobAttackMessage}</p>\n        <p>{playerMessage}</p>\n        {this.state.combatwindow == false ? <Rooms currentRoom={this.state.currentRoom} changeRoomImage={this.changeRoomImage}/>\n        : <p className=\"combatButtons\">{meleeAttackButton}{magicAttackButton}{runAwayButton}</p>}\n        <p className=\"switchViewsButton\">{switchViewsButton}</p>\n        {this.state.combat == false & this.state.combatwindow == true ? <p>{getRandomMob}</p> : null}\n        </div>\n    </div>\n\n      <div className=\"row bottomRow\">\n        <div className=\"col-sm-12 box charWindow\">\n        <React.Fragment>\n    <Switch>\n      <Route path=\"/login/\" children=<Login all={this.state}/>/>\n      <Route path=\"/character/create/\" component={CharCreate}/>\n      <Route path=\"/character/\" children=<Character all={this.state}/>/>\n      <Route path=\"/inventory/\" component={Inventory}/>\n      <Route path=\"/magic/\" component={Magic}/>\n      <Route path=\"/\" children=<CharWindow healChar={this.healChar} all={this.state}/>/>\n      </Switch>\n    </React.Fragment>\n    <div className=\"centerNav\"><Nav /></div>\n        </div>\n\n        </div>\n\n        </div>\n\n  );\n}\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter} from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n  <BrowserRouter>\n    <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}